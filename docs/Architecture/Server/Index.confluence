---
layout: default
title: "Архитектура серверной части"
position: 1
categories: 
tags: 
---

<p>Основные концепции:</p><ol><li>Архитектура платформы является полностью модульной, платформа содержит системные и прикладные модули. <ac:link><ri:page ri:content-title="Описание модульной архитектуры платформы." /><ac:plain-text-link-body><![CDATA[Подробнее]]></ac:plain-text-link-body></ac:link></li><li>Взаимодействие между различными модулями платформы осуществляется строго через API системы на основе REST. <ac:link><ri:page ri:content-title="Реализация API платформы" /><ac:plain-text-link-body><![CDATA[Подробнее]]></ac:plain-text-link-body></ac:link> (пример взаимодействия, eg, Reporting &lt;-&gt; Data Source)</li><li>В качестве Persistence layer используется абстракция, реализованная на основе ElasticSearch/Cassandra. Подробнее</li><li>Обработка веб-запросов REST осуществляется на основе использования .NET Web API 2.0. Подробнее</li><li>Для репортинга запросов используется дизайнер отчетов, предоставляющий возможность работы с различными типами источников данных (JSON, SQL, XML). Подробнее</li><li>Платформа предоставляет возможность гибкого изменения функционала, путем декларативного описания метаданных сервисов. <ac:link><ri:page ri:content-title="Декларативное описание сервисов платформы" /><ac:plain-text-link-body><![CDATA[Подробнее]]></ac:plain-text-link-body></ac:link></li><li>Прикладные модули представляют собой конфигурации системы. Конфигурации системы не зависят от системных модулей и могут поставляться независимо от платформы. Подробнее</li><li>Разработка прикладных модулей может осуществляться на любом компилируемом языке программирования. <strong>В данный момент поддерживается только язык C#.&nbsp;</strong>Подробнее</li><li>Разработка системных модулей платформы может осуществляться <strong>только на языке C#</strong>. Подробнее</li><li>Поддерживается как синхронная, так и асинхронная обработка запросов сохранения данных с использованием шины Rabbit MQ. <strong>Подробнее</strong> (какое место в системе играет очередь сообщений, какой протокол/контракт доступа к очередям - ЕА)</li><li>В основе платформы лежит собственная разработка, усовершенствующая шаблон CQRS - Json-Oriented Command-Query Responsibility Segregation. Подробнее</li><li>Платформа поддерживает возможности декларативного описания бизнес-процессов. <span class="confluence-link"><ac:link><ri:page ri:content-title="Декларативное описание структуры прикладной конфигурации" /><ac:plain-text-link-body><![CDATA[Подробнее]]></ac:plain-text-link-body></ac:link></span><span class="confluence-link"> (Важный пункт. Простенький пример? ЕА)<br /></span></li><li>Для обработки JSON данных используется собственный язык IQL (Index Query Language), позволяющий строить проекции данных JSON для отчетов. <strong>Подробнее</strong> (тоже несколько примернов - ЕА)</li><li>Платформа системы поддерживает Remote Administation &amp; Debug. Обновление приладных модулей (конфигураций) платформы выполняется без остановки эксплуатации (на работающей системе в режиме реального времени). Подробнее</li><li>Внутри системы данные хранятся в соответствии с ее внутренней моделью, указываемой декларативным образом. Модель является стандарто-независимой и представляет собой синтез различных подходов к моделированию (CDA, OpenEHR). Подробнее</li><li>Поддерживаются механизмы преобразования моделей данных OpenEHR во внутреннюю модель данных системы.</li><li>Поддерживаются механизмы генерации схем IHE XDS формата CDA HL7 на основе внутренней модели данных системы.</li><li>Платформа не требует выполнения миграций схем данных при изменении версий прикладных конфигураций, одновременно поддерживается множество схем данных. Подробнее</li><li>Платформа поддерживает механизм push-нотификаций на основе технологии SignalR. Подробнее</li><li>Хостинг платформы осуществляется в данный момент только на сервере Windows с использованием технологии OWIN. Существует возможность подключения кроссплатформенного хостинга, на основе, например ServiceStack. Подробнее</li><li>Конфигурирование и настройка серверной части выполняются с использованием REST API системы и с применением десктоп-конфигуратора системы. Подробнее.</li><li>Платформа предоставляет полный набор метаданных, необходимых для генерации фронт-энда на основе ее использования. Подробнее.</li><li>Платформа предоставляет полную поддержку версионности данных (хранение истории, поиск по истории, аудит, механизмы восстановления данных)</li><li>На базе платформы реализовано несколько production и тестовых конфигураций. <ac:link><ri:page ri:content-title="Реализация тестового сценария №1" /><ac:plain-text-link-body><![CDATA[Подробнее]]></ac:plain-text-link-body></ac:link><br /><br /></li></ol>