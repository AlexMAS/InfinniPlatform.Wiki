---
layout: default
title: Backup данных Elasticsearch
position: 
categories: 
tags: 
---

<h2>Введение</h2><p>Для создания резервных копий данных, хранящихся в кластере Elasticsearch, разработаны две консольные&nbsp;<ac:link><ri:attachment ri:filename="ElasticsearchBackup.zip" /><ac:plain-text-link-body><![CDATA[утилиты]]></ac:plain-text-link-body></ac:link>:</p><ol><li>snapshoter - утилита для создания полноценных резервных копий данных, хранящихся в индексах Elasticsearch. В основе реализации операций лежит встроенный в Elasticsearch механизм&nbsp;<a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html">snapshots</a></li><li>exporter - экспорт/импорт определенных документов из одного индекса. При экспорте происходит выборка данных из индекса по заданному критерию, после чего найденные документы сохраняются в json формате.&nbsp;</li></ol><p>Для работы утилит на компьютере должен быть установлен .Net Framework версии 4.5.</p><h2>Использование утилиты snapshoter</h2><p>Применение утилиты рекомендуется в том случае, если необходимо сделать полную резервную копию нескольких (или всех) индексов кластера. Утилита позволяет произвести четыре операции:</p><ol><li>Создать хранилище резервных копий</li><li>Просмотреть доступные резервные копии хранилища</li><li>Создать резервную копию в хранилище</li><li>Восстановить резервную копию из хранилища</li></ol><p>Описание аргументов утилиты:</p><table><tbody><tr><th>Имя параметра</th><th>Описание</th><th>Обязательность</th></tr><tr><td><pre>repository</pre></td><td>Имя хранилища резервных копий</td><td>да</td></tr><tr><td><pre>operation</pre></td><td><p>Тип операции:</p><p>CreateRepository = 1</p><p>GetSnapshots = 2</p><p>CreateSnapshot = 3</p><p>RestoreSnapshot = 4</p></td><td>да</td></tr><tr><td><pre>parameter</pre></td><td><p>Параметр операции, зависящий от значения параметра operation.</p><p>Для операции <span>CreateRepository параметр должен содержать путь к хранилищу. </span></p><p><span><span>Для операций <span>CreateSnapshot и <span>RestoreSnapshot </span></span></span><span>параметр должен содержать имя резервной копии. Дополнительно</span></span></p><p><span><span>к имени резервной копии можно указать любое количество индексов, которые необходимо сохранить. </span></span></p><p><span><span>Например, backupname.document.patient (<span>backupname - имя резервной копии, <span>document и patient - имена индексов). </span></span></span></span></p><p><span><span><span><span>Если имена индексов не указаны, в резервной копии будут сохранены все имеющиеся индексы.</span></span></span></span></p></td><td>нет</td></tr></tbody></table><p>Рассмотрим применение этих операций на конкретном примере. Допустим, мы собираемся хранить резервные копии данных elasticsearch в каталоге &quot;C:\elasticsearch-1.1.0\restore&quot;. Создаём новое хранилище c именем backup путем запуска консольной утилиты со следующими аргументами:</p><ac:structured-macro ac:name="code"><ac:plain-text-body><![CDATA[snapshoter backup 1 "C:\elasticsearch-1.1.0\restore"]]></ac:plain-text-body></ac:structured-macro><p>В случае, если хранилище успешно создано, утилита выдаст ответ: &quot;Repository backupr creation result: success&quot;</p><p>Далее можно создать резервную копию в хранилище backup:</p><ac:structured-macro ac:name="code"><ac:plain-text-body><![CDATA[snapshoter backup 3 snapshotname.patient]]></ac:plain-text-body></ac:structured-macro><p>Операция выполняется синхронно и может занять некоторое время. После завершения создания резервной копии, будет показано сообщение:&nbsp;Snapshort snapshotname creation result: success.</p><p>Посмотреть список резервных копий, расположенных в хранилище, можно следующим образом:</p><ac:structured-macro ac:name="code"><ac:plain-text-body><![CDATA[snapshoter backup 2 ]]></ac:plain-text-body></ac:structured-macro><p>Ответ на запрос приходит в следующей форме:</p><p>Shapshot: snapshotname (created - 02.06.2014 15:09:56, state - SUCCESS)<br />Shapshot: snapshot2 (created - 02.06.2014 15:24:00, state - SUCCESS)<br />Shapshot: snapshot3 (created - 02.06.2014 15:27:07, state - SUCCESS)</p><p>Восстановить данные по резервной копии можно следующим образом:</p><ac:structured-macro ac:name="code"><ac:plain-text-body><![CDATA[snapshoter backup 4 snapshotname.patient]]></ac:plain-text-body></ac:structured-macro><p>По окончании операции будет выдано сообщение:&nbsp;Snapshort snapshotname restoring result: success</p><h2>Использование утилиты exporter</h2><p>Утилита поддерживает следующие операции:&nbsp;</p><ol><li>Экспортировать содержимое одного или всех типов из индекса в архив</li><li>Импортировать данные из архива</li><li>Скорректировать маппинг для определенного типа</li></ol><p>Описание аргументов утилиты:</p><p>&nbsp;</p><table><tbody><tr><th>Имя параметра</th><th>Описание</th><th>Обязательность</th></tr><tr><td><pre>operation</pre></td><td><p>Тип операции:</p><p>Export = 1</p><p>Import = 2</p><p>MappingCorrection = 3</p></td><td><p>да</p><p>&nbsp;</p></td></tr><tr><td colspan="1">archive</td><td colspan="1"><p>Имя архива, в котором будут сохранены данные при экспорте или из которого будут взяты данные при импорте.</p><p>Расширение не указывается (расширение .zip будет добавлено автоматически)</p></td><td colspan="1">да</td></tr><tr><td colspan="1">index</td><td colspan="1">Имя индекса, из которого будут взяты данные при экспорте или куда будут помещены данные при импорте</td><td colspan="1">да</td></tr><tr><td><pre>type</pre></td><td><p>Имя типа в индексе для экспорта данных. Если имя типа индекса не указано или имеет значение &quot;all&quot;,</p><p>будут проэкспортированы все типы из индекса. Параметр используется только для операции экспорта.</p></td><td>нет</td></tr><tr><td colspan="1">datafilter</td><td colspan="1"><p>Имя файла, в котором содержится описание фильтра данных в формате <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-filters.html">Query DSL</a>.</p><p>Экспортироваться будут только те документы, которые удовлетворяют условиям фильтра. Если параметр</p><p>не указан, будут проэкспортированы все документы.</p><p>Пример фильтра (отбор документов с идентификатором &quot;<span>test_1&quot;</span>):</p><ac:structured-macro ac:name="code"><ac:plain-text-body><![CDATA[{
   "filtered":{
      "filter":{
         "term":{
            "Id":"test_1"
         }
      }
   }
}]]></ac:plain-text-body></ac:structured-macro><p>Если тип операции равен <span>MappingCorrection, в качестве DataFilter передается полный путь к свойству, которое необходимо удалить из маппинга.</span></p><p><span>Например: Patient.LastName</span></p></td><td colspan="1">нет</td></tr></tbody></table><p>&nbsp;</p><p>Рассмотрим применение этих операций на конкретном примере. Допустим, мы собираемся экспортировать документы, удовлетворяющие фильтру из файла &quot;query.json&quot;, из всех типов индекса classifierstorage в архив &quot;test_archive.zip&quot;. Для этого запускаем утилиту exporter со следующими аргументами:</p><ac:structured-macro ac:name="code"><ac:plain-text-body><![CDATA[exporter 1 test_archive classifierstorage all query.json]]></ac:plain-text-body></ac:structured-macro><p>Далее проимпортируем содержимое полученного архива в индекс classifierstorage_clone:</p><ac:structured-macro ac:name="code"><ac:plain-text-body><![CDATA[exporter 2 test_archive  classifierstorage_clone]]></ac:plain-text-body></ac:structured-macro><p>Применение данной утилиты рекомендуется в том случае, если нужно экспортировать данные из индекса с использованием фильтра. Во всех остальных случаях рекомендуется использовать утилиту snapshoter.</p><p>Пример корректировки маппинга:</p><ac:structured-macro ac:name="code"><ac:plain-text-body><![CDATA[exporter 3 test_archive iemk patient Name.LastName]]></ac:plain-text-body></ac:structured-macro>