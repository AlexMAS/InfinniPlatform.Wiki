---
layout: default
title: Реализация API платформы
position: 
categories: 
tags: 
---

<p>Поскольку система в целом имеет композитную структуру, необходимы способы интеграции между различными ее модулями.</p><p>При этом нельзя, чтобы возникала связанность между отдельными модулями системы.</p><p>Существует 2 возможных способа межмодульной интеграции:</p><ol><li>Интеграция на основе передачи сообщений в шину с последующим использованием потребителями информации из шины (асинхронный подход)</li><li>Интеграция на основе вызовов сервисов, реализующих заранее известный API системы (синхронный подход)</li></ol><p>Оба подхода в рамках платформы могут быть сведены к единому. Схема реализации взаимодействия клиента и сервера имеет следующий вид:</p><p>&nbsp;</p><p><ac:image ac:align="left" ac:style="float: left;" ac:thumbnail="true" ac:width="300"><ri:attachment ri:filename="REST.png" /></ac:image></p><table><tbody><tr><th>№п/п</th><th>Описание этапа</th></tr><tr><td>0</td><td><p>Клиент отправляет веб-запрос вида <span class="nolink">&nbsp;</span></p><p><span class="nolink"><span class="nolink">http://10.10.1.223:9999/ClassifierLoader/StandardApi/classifiers/Publish</span></span></p><p>На этом этапе выполняется роутинг запроса на соответствующий контроллер сервиса REST. О роутинге запросов к платформе см. здесь</p></td></tr><tr><td colspan="1">1</td><td colspan="1">Если сервис платформы задекларирован с указанием асинхронной обработки, создается новое сообщение в шине сообщений (Async operation контур), которое ждет своей очереди на обработку</td></tr><tr><td colspan="1">2</td><td colspan="1">Если сервис платформы задекларирован с указанием синхронной обработки, следует непосредственный вызов зарегистрированного обработчика для роутинга запроса. Об обработчиках подробнее см. <ac:link><ri:page ri:content-title="Декларативное описание сервисов платформы" /><ac:plain-text-link-body><![CDATA[здесь]]></ac:plain-text-link-body></ac:link></td></tr><tr><td colspan="1">3</td><td colspan="1">После достижения своей очереди, запрос из шины попадает на обработку в зарегистрированном обработчике роутинга. Об обработчиках подробнее см. <ac:link><ri:page ri:content-title="Декларативное описание сервисов платформы" /><ac:plain-text-link-body><![CDATA[здесь]]></ac:plain-text-link-body></ac:link></td></tr></tbody></table><p>В данный момент контур асинхронной обработки данных еще <strong><em>не реализован</em></strong> по следующим причинам:</p><ul><li>Асинхронная обработка пригодна для ограниченного круга сценариев, где допустима отложенная нотификация пользователя о результатах обработки</li><li>В данный момент не реализована сервисная обертка вокруг реализаций push-нотификаций и шины сообщений (сервисная обертка представляет собой скриптовые обработчики на уровнее системных конфигураций. <ac:link><ri:page ri:content-title="Точки расширения бизнес-логики" /><ac:plain-text-link-body><![CDATA[Подробнее о скриптовых обработчиках]]></ac:plain-text-link-body></ac:link>.)</li><li>Асинхронная обработка является последним шансом на спасение, поэтому ее стоит использовать, только если не помогли другие методы оптимизации обработки данных, такие как масштабирование систем хранения данных и системы хостинга запросов</li><li>Синхронная обработка на данный момент обеспечивает удовлетворительное время ответа</li></ul><p>Тем не менее, учитывая, что абстракции вокруг SignalR и RabbitMQ полностью реализованы, можно прогнозировать возможность подключения этих модулей к системе в кратчайшие сроки.</p><p>На рассмотренном выше изображании Client может являться как фронтендом системы, так и другим модулем платформы. Таким образом, все модули платформы могут обмениваться между собой сообщениями как в синхронном, так и в асинхронном режиме.</p><p>Все существующие в системе модули API могут быть вызваны описанным выше образом.</p><p>Существует два уровня прикладного API, описанного в сборке InfinniPlatform.API. Все прикладные сборки, в том числе тестовые, могут использовать данный API для выполнения необходимых операций. Непосредственное обращение из <ac:link><ri:page ri:content-title="Точки расширения бизнес-логики" /><ac:plain-text-link-body><![CDATA[скриптов]]></ac:plain-text-link-body></ac:link> прикладных сборок к C# объектам, реализующим обработку, не допускается (запрещено непосредственное создание и вызов объектов платформы).</p><table><tbody><tr><th>Тип API</th><th>Содержание</th></tr><tr><td>Low-level API</td><td>Содержит низкоуровневые операции для работы с хранилищем данных, для выполнения запросов IQL, для вызова сервисов REST в оговоренном формате обмена сообщениями, для вызова операций обновления прикладных конфигураций</td></tr><tr><td colspan="1">High-level API</td><td colspan="1">Содержит высокоуровневые абстракции для работы на уровне предметной области (работа с документами, терминологией, метаданными прикладных конфигураций). В дальнейшем планируется расширение высокоуровневого API платформы</td></tr></tbody></table><p><ac:image ac:thumbnail="true" ac:width="300"><ri:attachment ri:filename="APIs.png" /></ac:image></p><p>Примеры вызова данных API можно найти в проекте InfinniPlatform.Tests.csproj, а также в данной документации</p><p>&nbsp;</p>