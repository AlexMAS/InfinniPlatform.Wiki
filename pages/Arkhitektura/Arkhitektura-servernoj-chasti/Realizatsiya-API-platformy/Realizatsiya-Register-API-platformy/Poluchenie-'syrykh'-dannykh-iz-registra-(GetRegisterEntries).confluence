---
layout: default
title: Получение 'сырых' данных из регистра (GetRegisterEntries)
position: 
categories: 
tags: 
---

<p>Перед рассмотрением операций, следует ознакомиться с&nbsp;<ac:link><ri:page ri:content-title="Обработка запросов REST и формирование роутинга для запросов" /><ac:plain-text-link-body><![CDATA[правилами формирования запросов REST]]></ac:plain-text-link-body></ac:link></p><h4>Внутренняя реализация</h4><p>Регистры содержат информацию, создающуюся при проведении документов. Если рассматривать на уровне реализации, то регистр представляет собой хранилище документов.&nbsp;Каждая запись в регистре имеет ряд служебных свойств: Registrar (идентификатор документа-регистратора), RegistrarType (тип документа-регистратора), EntryType (тип записи, может принимать значения из набора: Income, Consumtion, Other), DocumentDate (дата создания документа-регистратора). В базовом сценарии обращение к регистрам будет производиться через специализированные запросы на агрегацию данных, где автоматически будут использованы значения служебных свойств и, как правило, пользователю не нужно знать о существовании служебных свойств. Однако, могут возникнуть ситуации, когда пользователю будут нужны необработанные данные из регистров. Специально для этих в API имеется метод GetRegisterEntries, позволяющий получить значения из регистра по его имени. Фактически, в рамках данного метода выполняется &nbsp;<ac:link><ri:page ri:content-title="Операция получения списка документов по фильтру (GetDocument)" /><ac:plain-text-link-body><![CDATA[Операция получения списка документов по фильтру (GetDocument)]]></ac:plain-text-link-body></ac:link>, где в качестве метаданных указывается &quot;Register_&lt;Register name&gt;&quot;, где Register name - наименование регистра, из которого необходимо получить необработанные значения.</p><h4><span class="uiJsonPretty-string" style="color: rgb(102,255,102);">&nbsp;</span></h4><h4>Запрос</h4><p>POST&nbsp;<a href="http://10.10.1.82:9999/RestfulApi/StandardApi/configuration/getdocument">http://&lt;ServerName&gt;:&lt;PortName&gt;/RestfulApi/StandardApi/configuration/getdocument</a></p><ac:structured-macro ac:name="code"><ac:parameter ac:name="title">BODY</ac:parameter><ac:parameter ac:name="language">js</ac:parameter><ac:plain-text-body><![CDATA[{
	"id": null,
	"changesObject": {
		"Configuration": "<Configuration name>",
		"Metadata": "Register_<Register name>",
		"Filter": <Filter object>,
		"PageNumber": <Page number>,
		"PageSize": <Page size>,
		"ResolveReferences": false
	},
	"replace": false
}]]></ac:plain-text-body></ac:structured-macro><p>В теле запроса передаются следующие аргументы (вместо &lt;parameter name&gt; указывается нужное значение)</p><p>&lt;Configuration name&gt; - идентификатор конфигурации (см.&nbsp;<ac:link><ri:page ri:content-title="Обработка запросов REST и формирование роутинга для запросов" /><ac:plain-text-link-body><![CDATA[правила формирования запросов REST]]></ac:plain-text-link-body></ac:link>)</p><p>&lt;Metadata name&gt; - наименование объекта метаданных (см.&nbsp;<ac:link><ri:page ri:content-title="Обработка запросов REST и формирование роутинга для запросов" /><ac:plain-text-link-body><![CDATA[правила формирования запросов REST]]></ac:plain-text-link-body></ac:link>)</p><p>&lt;Filter object&gt; -объект фильтра для поискового запроса (см. структура фильтра поискового запроса), может содержать null либо значение фильтра</p><p>&lt;Page number&gt; -номер страницы результатов поискового запроса, по умолчанию 0</p><p>&lt;Page size&gt; -размер страницы поискового запроса, по умолчанию 10</p><h4>Ответ</h4><p>Ответ сервера (пример):</p><ac:structured-macro ac:name="code"><ac:parameter ac:name="title">Пример ответа сервера на запрос документов</ac:parameter><ac:parameter ac:name="language">js</ac:parameter><ac:plain-text-body><![CDATA[[{
	"Registrar": "e39c7d32-4f85-45d9-a80e-cabbba6c42ba",
	"RegistrarType": "bedsregistration",
	"EntryType": "Income",
	"Id": "497f8b3c-3511-4ed7-9189-0a6b79137dae",
	"DocumentDate": "2114-03-01T00:00:00",
	"Room": "Палата 1",
	"Bed": "Койка 6",
	"Value": 1,
	"TimeStamp": "2014-08-29T13:48:02.8238145+06:00"
},
{
	"Registrar": "0afb09e9-2ddb-4dc7-b161-482499ea5c28",
	"RegistrarType": "bedsregistration",
	"EntryType": "Income",
	"Id": "2366f640-6636-4b7f-933b-02426ca41f3a",
	"DocumentDate": "2114-02-01T00:00:00",
	"Room": "Палата 1",
	"Bed": "Койка 5",
	"Value": 1,
	"TimeStamp": "2014-08-29T13:48:02.7358057+06:00"
},
{
	"Registrar": "a6143ed9-8429-454b-bb89-c97d7ea0fc82",
	"RegistrarType": "bedsregistration",
	"EntryType": "Income",
	"Id": "742beedf-8317-4d7b-88ad-52c4cfc021b8",
	"DocumentDate": "2114-01-01T00:00:00",
	"Room": "Палата 1",
	"Bed": "Койка 2",
	"Value": 1,
	"TimeStamp": "2014-08-29T13:48:02.4257747+06:00"
}]]]></ac:plain-text-body></ac:structured-macro>