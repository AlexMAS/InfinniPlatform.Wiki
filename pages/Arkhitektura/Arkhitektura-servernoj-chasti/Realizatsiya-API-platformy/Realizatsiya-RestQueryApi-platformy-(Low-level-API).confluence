---
layout: default
title: Реализация RestQueryApi платформы (Low-level API)
position: 
categories: 
tags: 
---

<p>RestQueryApi содержит методы-хелперы для выполнения запросов из контекста <ac:link><ri:page ri:content-title="Точки расширения бизнес-логики" /><ac:plain-text-link-body><![CDATA[скриптового обработчика бизнес-логики]]></ac:plain-text-link-body></ac:link> к различным модулям API, а также для выполнения запросов из одного модуля API к другому модулю API, реализуя подход, описанный в <ac:link><ri:page ri:content-title="Реализация API платформы" /><ac:plain-text-link-body><![CDATA[Реализация API платформы]]></ac:plain-text-link-body></ac:link></p><ac:structured-macro ac:name="code"><ac:parameter ac:name="title">Пример использования RestQueryApi helpers</ac:parameter><ac:parameter ac:name="language">c#</ac:parameter><ac:plain-text-body><![CDATA[        /// <summary>
        ///   Установить JSON-конфигурацию системы
        /// </summary>
        /// <param name="configurationId">Идентификатор конфигурации</param>
        /// <param name="metadataObject">Конфигурация системы</param>
        /// <param name="metadataType">Тип метаданных системы</param>
        public static void UpdateMetadataObject(string configurationId, dynamic metadataObject, string metadataType)
        {
            if (metadataObject.Name == null)
            {
                throw new ArgumentException(Resources.ErrorConfigNameIsEmpty);
            }
            var request = new
                              {
                                  ConfigurationName = configurationId,
                                  MetadataType = metadataType,
                                  MetadataObject = metadataObject
                              };
            RestQueryApi.QueryPostRaw("Update", "Package", "installjsonmetadata", null, request);
        }]]></ac:plain-text-body></ac:structured-macro>