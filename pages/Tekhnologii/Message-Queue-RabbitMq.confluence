---
layout: default
title: Message Queue: RabbitMq
position: 
categories: 
tags: 
---

<p><a href="https://www.rabbitmq.com/">RabbitMQ</a> - платформа, реализующая систему обмена сообщениями между компонентами программной системы на основе протокола <a href="http://en.wikipedia.org/wiki/Advanced_Message_Queuing_Protocol">AMQP (Advanced Message Queuing Protocol)</a>.</p><h4>Протокол&nbsp;AMQP</h4><p>AMQP (Advanced Message Queuing Protocol) &mdash; открытый протокол для передачи сообщений между компонентами системы.&nbsp;<span style="line-height: 1.4285715;">Протокол основан на трех понятиях:</span></p><ul><li>Message - сообщение -&nbsp;единица передаваемых данных, основная его часть (содержание) никак не интерпретируется сервером, к сообщению могут быть прицеплены структурированные заголовки.</li><li>Exchenge - точка обмена - приемник сообщений, осуществляющий распределение сообщений в одну или несколько очередей, но не отвечающий за сохранение сообщений; существует несколько типов точек обмена:<ul><li>fanout - сообщение предается в очередь, если она была связана (binding) с точкой обмена;</li><li>direct - сообщение передается в очередь, если ее ключ маршрутизации (routing key), указанный при отправке сообщения, совпадает с фильтром, который был указан в момент связывания (binding) очереди с точкой обмена;</li><li>topic -&nbsp;сообщение передается в очередь, если ее ключ маршрутизации (routing key), указанный при отправке сообщения, совпадает с фильтром, который был указан в момент связывания (binding) очереди с точкой обмена, причем фильтр может представлять шаблон;</li></ul></li><li>Queue - очередь сообщений - хранит сообщения до тех пор, пока они не будут получены потребителем (consumer).</li></ul><p>&nbsp;</p><p>Дополнительно определяются понятия:</p><ul><li>Consumer - потребитель (подписчик, обработчик, клиент) сообщений очереди.</li><li>Acknowledge - сигнал подтверждения о том, что сообщение обработано, который посылает потребитель.</li><li>Routing key - ключ маршрутизации, который указывается при отправке сообщения.</li><li>Routing pattern - шаблон маршрутизации, который указывается в момент связывания.</li><li>Binding - процесс связывания очереди и точки обмена.</li></ul><h4>Общая схема обмена</h4><p>Сначала на стороне сервера создается точка обмена (exchange) и очередь (queue). При создании точки обмена указывается ее наименование и тип (fanout, direct, topic); при создании очереди указывается ее наименование и настройки, связанные с управлением сообщениями. Затем осуществляется связывание (bingding) очереди с точкой обмена. По завершению этого этапа получается инфраструктура, которая удовлетворяет нужному шаблону обмена между издателем (publisher) и потребителями (counsumer). Далее издатель осуществляет публикацию сообщений, а потребитель осуществляет прослушивание одной или нескольких очередей сообщений. В момент публикации издатель, как правило, сериализует пересылаемый объект в массив байт, прикрепляет к сообщению структурированный заголовок, в котором может указать, например, тип содержимого (Content Type), и вызывает метод публикации (publish), передавая ему сформированное сообщение и ключ маршрутизации (routing key). В момент прослушивания потребитель читает (dequeue) сообщение из прослушиваемого канала, десериализует содержимое принятого сообщения из массива байт в объект, возможно, анализируя заголовочную часть, после чего осуществляет обработку. Получив сообщение потребитель также может уведомить сервер о том, что сообщение обработано, послав сигнал подтверждения (acknowledge). Подтверждение может посылаться, как в ручном, так и в автоматическом режиме, в зависимости от того, как была объявлена (declare) очередь.</p><h4>Кластеризация</h4><p>RabbitMq поддерживает <a href="http://www.rabbitmq.com/clustering.html">кластеризацию</a>. Поскольку&nbsp;RabbitMq работает на базе Erlang-сервера, поэтому все сетевое взаимодействие между узлами кластера, на которых установлена шина, реализуется с помощью стандартных средств Erlang.&nbsp;Чтобы определить разрешено ли разным Erlang-серверам взаимодействовать друг с другом, они обмениваются хэшем пароля (который почему-то принято называть cookie, хотя с одноименным механизмом браузеров он ничего общего не имеет). Если хэши совпали, значит узлы могут взаимодействовать друг с другом. Таким образом, на всех узла кластера&nbsp;RabbitMq нужно прописать одинаковый хэш (см. инструкцию по развертыванию на официальном сайте).</p><p>Узлы в RabbitMQ кластере могут быть двух типов: работающие только в памяти и сохраняющие данные на диск. Так как состояние системы реплицируется между узлами кластера, в большинстве случаев достаточно иметь лишь 2-3 дисковых узла, а остальные избавить от необходимости работать с дисковой подсистемой для увеличения производительности.&nbsp;Важно понимать, что под состоянием системы здесь имеются ввиду лишь привязки и настройки сервера RabbitMq, каждая же очередь и хранящиеся в ней сообщения располагаются на одном конкретном узле, что приведет к потери части сообщений при сбое одного из серверов.&nbsp;<span style="line-height: 1.4285715;">Однако этот вопрос можно решить, включив репликацию для критически важных очередей. Такие очереди называются зеркальными (mirrored queues).&nbsp;</span><span style="line-height: 1.4285715;">Реплицирование очередей осуществляется по принципу&nbsp;</span><span style="line-height: 1.4285715;">&quot;ведущий-ведомый&quot; (master-slave), то есть сообщения публикуются на ведущий узел, а он реплицирует эти данные на все ведомые узлы. Если ведущий узел выходит из строя, один из ведомых узлов занимает его место.</span></p><ac:structured-macro ac:name="info"><ac:parameter ac:name="title">Информация</ac:parameter><ac:rich-text-body><p><span>Для хранения сообщений RabbitMq использует базу данных&nbsp;</span><a href="http://en.wikipedia.org/wiki/Mnesia">Mnesia</a><span>, которая представляет собой распределенное хранилище типа &quot;ключ-значение&quot;, где в качестве ключа и значения выступают массивы байт.</span></p></ac:rich-text-body></ac:structured-macro><h4>Ссылки</h4><p><a href="https://www.rabbitmq.com/">Официальный сайт RabbitMq</a></p><p><a href="http://www.rabbitmq.com/specification.html">Спецификации AMQP</a></p><p><a href="http://habrahabr.ru/post/149694/">RabbitMQ tutorial 1 - Hello World</a></p><p><a href="http://habrahabr.ru/post/150134/">RabbitMQ tutorial 1 - Очередь задач</a></p><p>&nbsp;</p><p>&nbsp;</p>